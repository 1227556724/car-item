<?php


namespace app\admin\controller;


use think\Db;
use think\Exception;

class Admin extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index(){
        return $this->fetch();
    }
    public function add(){
        if (!$this->request->isPost()){
            return json([
                'code'=>config('code.fali'),
                'msg'=>'请求方式错误'
            ]);
        }
        $data=$this->request->post();
        try{
            $data['password']=md5($data['password']);
            $model=model('Admin');
            $result=$model->inserts($data);
            if($result){
                return json([
                    'code'=>config('code.success'),
                    'msg'=>'添加成功'
                ]);
            }else{
                return json([
                    'code'=>config('code.fali'),
                    'msg'=>'添加失败'
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code'=>config('code.fali'),
                'msg'=>'添加失败'
            ]);
        }
    }
    public function finds(){
        if(!$this->request->isGet()){
            return json([
                'code'=>config('code.fali'),
                'msg'=>'数据请求失败'
            ]);
        }
        //        请求从前台发送回来的所有数据
        $parme=$this->request->get();
//        判断如果没有收到页数或者为空，那就给一个默认值
        if(!isset($parme['page'])||empty($parme['page'])){
            $page=1;
        }else{
            $page=$parme['page'];
        }
//        判断如果没有收到每页显示的条数，那就给一个默认值
        if(!isset($parme['limit'])||empty($parme['limit'])){
            $limit=config('paginte.list_rows');
        }else{
            $limit=$parme['limit'];
        }
//        创建一个空的数组，用来判断接收回来多余的数据
        $sdata=[];
//        判断如果名称存在并且不为空就根据这个数组设置搜索的条件
        if(isset($parme['username'])&&!empty($parme['username'])){
//            由于名称不能设置完全的相等，而like是一个模糊查询，大概有相同的名称就可以查询到
            $sdata['username']=['like','%'.$parme['username'].'%'];
        }
        // 判断如果模板存在并且不为空就根据这个数组设置搜索的条件
//        数据库的总长度
        $model=model('Admin');
        $datas=$model->finds($sdata,$page,$limit);
        $count=$model->counts($sdata);

        try{
            if($datas&&$count){
                return json([
                    'code'=>0,
                    'msg'=>"",
                    'count'=>$count,
                    'data'=>$datas
                ]);
            }else{
                return json([
                    'code'=>1,
                    'msg'=>"请求失败",
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code'=>1,
                'msg'=>"请求失败",
            ]);
        }
    }
    public  function status(){
        if(!$this->request->isGet()){
            return json([
                "code"=>config('code.fail'),
                "msg"=>"请求方式错误"
            ]);
        }
        $data=$this->request->get();
        $id=$data['id'];
        try{
            $model=model('Admin');
            $sql=$model->updates($data,['id'=>$id]);
            if($sql){
                return json([
                    "code"=>config('code.success'),
                    "msg"=>'修改成功',
                    "data"=>$sql
                ]);
            }else{
                return json([
                    "code"=>config('code.fail'),
                    "msg"=>'修改失败'
                ]);
            }
        }catch (Exception $exception){
            return json([
                "code"=>config('code.fail'),
                "msg"=>'修改失败'
            ]);
        }
    }
    public function del(){
        if(!$this->request->isGet()){
            return json([
                'code'=>config('code.fali'),
                'msg'=>'数据请求失败'
            ]);
        }
        $data=$this->request->get();
        $model=model('Admin');
        $result=$model->dels($data);
        try{
            if($result){
                return json([
                    'code'=>config('code.success'),
                    'msg'=>'删除成功'
                ]);
            }else{
                return json([
                    'code'=>config('code.fali'),
                    'msg'=>'删除失败'
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code'=>config('code.fali'),
                'msg'=>'删除失败'
            ]);
        }
    }
    public  function edit(){
//        view 第一个参数可以写 模板的名称 就可以 方法和模板名字不同,第二个参数可以传参数
        if(!$this->request->isGet()){
            return json([
                "code"=>config('code.fail'),
                "msg"=>"请求方式错误"
            ]);
        }

        $data=$this->request->get();
        $id=$data['id'];
        $validate=validate('Admin');
        if(!$validate->scene('del')->check($data)){
            return json([
                "code"=>config('code.fail'),
                "msg"=>$validate->getError()
            ]);
        }

        try{
            $model=model('Admin');
            $sql=$model->queryone(['id'=>$id]);
            if($sql){
                return json([
                    "code"=>config('code.success'),
                    "msg"=>'获取成功',
                    "data"=>$sql
                ]);
            }else{
                return json([
                    "code"=>config('code.fail'),
                    "msg"=>'获取失败',

                ]);
            }
        }catch (Exception $exception){
            return json([
                "code"=>config('code.fail'),
                "msg"=>'获取失败',

            ]);
        }
    }
    public function update(){
        if(!$this->request->isPost()){
            return json([
                "code"=>config('code.fail'),
                "msg"=>"请求方式错误"
            ]);
        }
        $data=$this->request->post();

        $validate=validate('Admin');
        if(!$validate->scene('edit')->check($data)){
            return json([
                "code"=>config('code.fail'),
                "msg"=>$validate->getError()
            ]);
        }
        try{
            $id=$data['id'];
            $model=model('Admin');
            $arr=['id'=>$id];
            unset($data['id']);
            $data['password']=md5($data['password']);
            $sql=$model->updates($data,$arr);
            if ($sql){
                return json([
                    "code"=>config('code.success'),
                    "msg"=>'修改成功',

                ]);
            }else{
                return json([
                    "code"=>config('code.fail'),
                    "msg"=>'未做修改',

                ]);
            }
        }catch (Exception $exception){
            return json([
                "code"=>config('code.fail'),
                "msg"=>'修改失败',

            ]);
        }
    }
}